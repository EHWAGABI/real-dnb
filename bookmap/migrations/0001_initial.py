# Generated by Django 2.2.6 on 2020-01-17 06:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookStore',
            fields=[
                ('bookstore_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='storename', max_length=20, null=True, verbose_name='책방이름')),
                ('addr', models.TextField(unique=True, verbose_name='책방주소')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='000-0000-0000과 같은 형식으로 입력해주세요.', regex='^\\d{2,4}\\-\\d{3,4}\\-\\d{4}$')], verbose_name='전화번호')),
                ('site', models.URLField(blank=True, null=True, verbose_name='웹사이트')),
                ('img', models.ImageField(blank=True, null=True, upload_to='store/', verbose_name='외관사진')),
                ('insta', models.CharField(blank=True, max_length=50, null=True, verbose_name='인스타그램')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='이메일')),
                ('openhour', models.TextField(blank=True, null=True, verbose_name='영업시간')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
                ('img', models.ImageField(blank=True, null=True, upload_to='thema/')),
            ],
        ),
        migrations.CreateModel(
            name='Stamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('count', models.IntegerField(default=1)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookmap.BookStore')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Scrap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookmap.BookStore')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200)),
                ('star', models.PositiveIntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookmap.BookStore')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crawling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('content', models.TextField()),
                ('link', models.URLField()),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookmap.BookStore')),
            ],
        ),
        migrations.AddField(
            model_name='bookstore',
            name='tag_set',
            field=models.ManyToManyField(blank=True, to='bookmap.Tag'),
        ),
        migrations.AddField(
            model_name='bookstore',
            name='users',
            field=models.ManyToManyField(related_name='bookmap_bookstore_related', through='bookmap.Scrap', to=settings.AUTH_USER_MODEL),
        ),
    ]
